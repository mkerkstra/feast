# Default values for feast-operator.

# Global settings
global:
  imageRegistry: ""
  imagePullSecrets: []

# Operator deployment configuration
operator:
  # Image configuration
  image:
    repository: quay.io/feastdev/feast-operator
    tag: 0.52.0
    pullPolicy: IfNotPresent
  
  # Replica count
  replicaCount: 1
  
  # Resource limits and requests
  resources:
    limits:
      cpu: 1000m
      memory: 256Mi
    requests:
      cpu: 10m
      memory: 64Mi
  
  # Environment variables
  env:
    relatedImageFeatureServer: "quay.io/feastdev/feature-server:0.52.0"
    relatedImageCronJob: "quay.io/openshift/origin-cli:4.17"
  
  # Health check configuration
  healthcheck:
    port: 8081
    livenessProbe:
      initialDelaySeconds: 15
      periodSeconds: 20
    readinessProbe:
      initialDelaySeconds: 5
      periodSeconds: 10
  
  # Pod security context
  securityContext:
    runAsNonRoot: true
    # seccompProfile:
    #   type: RuntimeDefault
  
  # Container security context
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - "ALL"
  
  # Node affinity
  affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #       - matchExpressions:
    #         - key: kubernetes.io/arch
    #           operator: In
    #           values:
    #             - amd64
    #             - arm64
    #             - ppc64le
    #             - s390x
    #         - key: kubernetes.io/os
    #           operator: In
    #           values:
    #             - linux
  
  # Node selector
  nodeSelector: {}
  
  # Tolerations
  tolerations: []
  
  # Pod annotations
  podAnnotations:
    kubectl.kubernetes.io/default-container: manager
  
  # Pod labels
  podLabels: {}
  
  # Additional arguments (beyond the auto-generated ones)
  args: []

# Service account configuration
serviceAccount:
  # Create a dedicated ServiceAccount for the operator (recommended)
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# RBAC configuration
rbac:
  # Specifies whether RBAC resources should be created
  create: true

# Metrics service configuration
metrics:
  # Enable metrics service
  enabled: true
  # Service configuration
  service:
    type: ClusterIP
    port: 8443
    targetPort: 8443
    annotations: {}

# Namespace configuration
namespace:
  # Create namespace if it doesn't exist
  create: true
  # Namespace name (defaults to Release.Namespace)
  name: ""
  # Namespace labels
  labels:
    control-plane: controller-manager

# CRD configuration
crds:
  # Install CRDs
  install: true

# Additional labels to add to all resources
commonLabels: {}

# Additional annotations to add to all resources
commonAnnotations: {}

# Default storage configuration for PVCs
storage:
  # Default storage class for all PVCs (can be overridden per service)
  defaultStorageClass: ""
  # Default access modes
  defaultAccessModes:
    - ReadWriteOnce
  # Default reclaim policy annotation
  reclaimPolicy: ""

# Name prefix for all resources (matches kustomize namePrefix)
namePrefix: "feast-operator-"

# Enable Prometheus monitoring
prometheus:
  # Install ServiceMonitor for Prometheus Operator
  serviceMonitor:
    enabled: false
    # Additional labels for ServiceMonitor
    labels: {}
    # Scrape interval
    interval: 30s
    # Scrape timeout
    timeout: 10s

# TLS Certificate Management via cert-manager
tls:
  # Enable TLS support in generated FeatureStore specs (mount secrets, set cert paths)
  enabled: false
  
  # Control whether this chart manages cert-manager resources (Issuer/Certificate)
  certManager:
    enabled: false
  
  # Certificate issuer configuration
  issuer:
    # Create a ClusterIssuer or Issuer
    create: true
    # Use ClusterIssuer (cluster-wide) or Issuer (namespace-scoped)
    clusterWide: true
    # Issuer name (will be prefixed with release name if not clusterWide)
    name: "feast-issuer"
    
    # Issuer type configuration
    type: "selfSigned"  # selfSigned (default), letsencrypt, ca, vault
    
    # Let's Encrypt ACME configuration
    letsencrypt:
      # ACME server (letsencrypt-staging or letsencrypt-prod)
      server: "https://acme-staging-v02.api.letsencrypt.org/directory"
      # Email for ACME registration
      email: ""
      # Private key secret name
      privateKeySecretRef:
        name: "letsencrypt-private-key"
      # Solvers for ACME challenges
      solvers:
        - http01:
            ingress:
              class: "nginx"
    
    # CA Issuer configuration
    ca:
      # Secret containing the CA certificate and private key
      secretName: "ca-secret"
    
    # Self-signed issuer configuration  
    selfSigned: {}
    
    # Vault issuer configuration
    vault:
      server: ""
      path: ""
      auth:
        kubernetes:
          role: ""
          secretRef:
            name: ""
            key: ""
  
  # Default certificate configuration for FeatureStores
  defaultCertificate:
    # Default certificate duration
    duration: "2160h"  # 90 days
    # Certificate renewal time
    renewBefore: "360h"  # 15 days
    # Certificate algorithm
    algorithm: "RSA"
    # Certificate key size
    keySize: 2048
    # Certificate usages
    usages:
      - "digital signature"
      - "key encipherment"
      - "server auth"
    # Default DNS names and IPs for certificates
    dnsNames: []
    ipAddresses: []

# Advanced configuration options
advanced:
  # Enable leader election (should always be true for production)
  leaderElection: true
  # Metrics bind address (HTTPS)
  metricsBindAddress: ":8443"
  # Health probe bind address
  healthProbeBindAddress: ":8081"
  # Termination grace period in seconds
  terminationGracePeriodSeconds: 10

# Example FeatureStore deployments (optional)
# Deploys multiple FeatureStore CRs for different use cases
featureStores:
  # Enable deployment of FeatureStores
  enabled: false
  
  # FeatureStore configurations (object-based for easier Helm overrides)
  sample:
    enabled: true  # Enable this specific FeatureStore
    feastProject: "my_project"
    
    # TLS configuration for this FeatureStore
    tls:
      # Enable TLS for this FeatureStore (overrides global tls.enabled)
      enabled: false
      # Use existing certificate secret or create new certificates
      existingSecret: ""
      # Certificate configuration (uses global defaults if not specified)
      certificate:
        # Override default certificate settings
        dnsNames: []
        duration: ""
        renewBefore: ""
        # Issuer to use (defaults to global issuer)
        issuerRef:
          name: ""
          kind: "ClusterIssuer"  # ClusterIssuer or Issuer
      # Service-specific certificate overrides
      services:
        onlineStore:
          secretName: ""  # Custom certificate secret name
          dnsNames: []
        offlineStore:
          secretName: ""
          dnsNames: []
        registry:
          secretName: ""
          dnsNames: []
        ui:
          secretName: ""
          dnsNames: []
    
    # Quick start configurations
    quickStart:
      withPersistence: false
      disableTLS: false
      template:
        enabled: false
        type: "local"
    
    # Services configuration
    services:
      onlineStore:
        enabled: true
      registry:
        local:
          enabled: true
      ui:
        enabled: false
  
  # Production FeatureStore with external databases
  production:
    enabled: false  # Disabled by default
    feastProject: "production"
    
    services:
      onlineStore:
        enabled: true
        persistence:
          store:
            enabled: true
            type: "postgres"
            secretRef:
              name: "feast-stores"
      offlineStore:
        enabled: true
        persistence:
          store:
            enabled: true
            type: "bigquery"
            secretRef:
              name: "feast-stores"
      registry:
        local:
          enabled: true
          persistence:
            store:
              enabled: true
              type: "sql"
              secretRef:
                name: "feast-stores"
      ui:
        enabled: true
    
    authz:
      oidc:
        enabled: true
        secretRef:
          name: "oidc-config"
  
  # Development FeatureStore with Git repo
  development:
    enabled: false  # Disabled by default
    feastProject: "development"
    
    feastProjectDir:
      git:
        enabled: true
        url: "https://github.com/myorg/feature-repo.git"
        ref: "main"
    
    quickStart:
      disableTLS: true
      
    services:
      onlineStore:
        enabled: true
      registry:
        local:
          enabled: true
      ui:
        enabled: true
